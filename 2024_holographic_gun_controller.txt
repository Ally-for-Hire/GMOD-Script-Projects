--@name 2024 Holographic Gun Controller
--@author Ally for Hire / Merydian9
--@shared
--@server


-- GLOBAL VARIABLES HERE
-- Wire port setup
wire.adjustPorts({
    Aimer = "entity", 
    Base = "entity",
    HitPos = "vector",
    LockTurret = "number",
    TargetPos = "vector", 
    LeadPos = "vector", 
    TargetName = "string"}, 
    {GunTarget = "vector"})

-- Gun settings
local ROTATESPEED = 80
local MAXELEVATION = 240
local MAXDEPRESSION = 25
local MAXYAW = 180 -- Not currently functional

-- Global variable initialization
local HITPOS = Vector()
local HITNORMAL = Vector()
local FILTER = {}
local DT = game.getTickInterval() -- Time step for the PID loop (adjust as needed)   
local ROTATESPEED = ROTATESPEED * DT
local TURRETLOCKED = true
local GUNANG = chip():getAngles()
local TEST_HOLOGRAM = hologram.create(chip():getPos() + Vector(0, 0, 25), Angle(0, 0, 0), "models/autocannon/autocannon_30mm.mdl")
local GUN = TEST_HOLOGRAM
local LOCKEDPOS = chip():worldToLocal(GUN:getPos() + chip():getForward() * 10000000)
-- TEST_HOLOGRAM:setParent(chip())

-- SERVER FUNCTIONS HERE
function angClamp(ang1, ang2, ang3) -- angle, lowangle, highangle
    return Angle(math.clamp(ang1.pitch, ang2.pitch, ang3.pitch), math.clamp(ang1.yaw, ang2.yaw, ang3.yaw), math.clamp(ang1.roll, ang2.roll, ang3.roll))    
end
local ABS = math.abs

-- SERVER HOOKS HERE
-- Updating inputs
hook.add ("input", "updateWire", function(INPUT, VALUE)  
    if INPUT == "LockTurret" then
        if VALUE == 1 then
            TURRETLOCKED = !TURRETLOCKED
            
            if TURRETLOCKED then
                LOCKEDPOS = chip():worldToLocal(wire.ports.HitPos)
            end
        end
    end
end)

-- Gun aiming
hook.add("tick", "main", function()
    -- if wire.ports.Aimer == nil or not wire.ports.Aimer:isValid() or wire.ports.Aimer:isFrozen() then return end
    
    local ANG = Angle(0, 0, 0)
    local BASE = chip()
    TEST_HOLOGRAM:setPos(chip():getPos() + chip():getVelocity() * DT)

    if TURRETLOCKED then
        GUNANG = (chip():localToWorld(LOCKEDPOS) - GUN:getPos()):getNormalized():getAngle()
        TEST_HOLOGRAM:setAngles(GUNANG)
        wire.ports.GunTarget = wire.ports.TargetPos  
    elseif (wire.ports.TargetName != "") then 
        GUNANG = (wire.ports.LeadPos - GUN:getPos()):getNormalized():getAngle()
        wire.ports.GunTarget = wire.ports.TargetPos
    elseif (wire.ports.TargetName == "") then
        GUNANG = (wire.ports.HitPos - GUN:getPos()):getNormalized():getAngle()
        wire.ports.GunTarget = wire.ports.HitPos 
    end

    local chipPitch = chip():localToWorldAngles(Angle(0, 0, 0)).pitch    
    local relPitch = math.clamp((GUNANG.pitch > 90 and -(360 - GUNANG.pitch) or GUNANG.pitch), -(MAXELEVATION) + chipPitch, MAXDEPRESSION + chipPitch)
    GUNANG.pitch = GUNANG.pitch > 90 and relPitch + 360 or relPitch
    
    GUN:setAngVel(GUN:worldToLocalAngles(GUNANG))
end)